name: Wisecow CI/CD on Kind

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/wisecow

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
    - name: 1. Checkout repository
      uses: actions/checkout@v4

    - name: 2. Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 3. Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 4. Extract metadata (tags) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=sha,prefix=
          type=raw,value=latest

    - name: 5. Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-to-kind:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: 1. Checkout repository
      uses: actions/checkout@v4

    - name: 2. Create Kind Cluster with Port Mapping
      uses: helm/kind-action@v1.9.0
      with:
        config: kind-config.yaml

    - name: 3. Install Nginx Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
        kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=90s

    - name: 4. Load Docker Image into Kind Cluster
      run: |
        kind load docker-image ${{ needs.build-and-push.outputs.image }}

    - name: 5. Install Cert-Manager
      uses: jetstack/helm-charts/cert-manager@v0.1.0
      with:
        version: v1.14.3
        
    - name: 6. Apply Kubernetes Manifests (Deployment, Service, TLS)
      run: |
        # Apply all files in the kubernetes directory
        kubectl apply -f kubernetes/
        
    - name: 7. Wait for Ingress to be Ready
      run: |
        kubectl wait --for=condition=Available deployment/wisecow-deployment --timeout=120s
        
    - name: 8. Verification
      run: |
        # Note: You'll need to update /etc/hosts in the runner for the domain name
        echo "127.0.0.1 wisecow.yourdomain.com" | sudo tee -a /etc/hosts
        
        # Wait for cert-manager to provision the test cert (can take a few minutes)
        echo "Waiting for TLS certificate to be provisioned..."
        kubectl wait --for=condition=ready certificate/wisecow-tls-secret --timeout=180s
        
        # Test TLS communication
        curl -vk https://wisecow.yourdomain.com/
        
